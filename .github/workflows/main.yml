name: üöÄ Deploy Portfolio (Production)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy"
        required: true
        default: "master"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy over SSH (root@SERVER_IP)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}          # e.g. 143.x.x.x
          username: root                          # "ssh root@<ip>"
          key: ${{ secrets.SSH_PRIVATE_KEY }}     # your private key
          port: "22"                              # or set another if needed
          script_stop: true
          # No heredoc; just a multiline script
          script: |
            set -euo pipefail

            BRANCH="${{ github.event.inputs.branch }}"
            APP_DIR="${{ secrets.APP_DIR }}"   # e.g. /home/apps/portfolio

            echo "‚û°Ô∏è  Deploying branch '$BRANCH' to '$APP_DIR'"
            if [ ! -d "$APP_DIR/.git" ]; then
              echo "‚ùå Repo not found at $APP_DIR. Clone it there first."
              exit 1
            fi

            cd "$APP_DIR"

            echo "üì¶ git pull (1)"
            git pull || true

            echo "üîÄ checkout $BRANCH"
            git fetch --all --prune
            git checkout "$BRANCH" || git checkout -b "$BRANCH" "origin/$BRANCH"

            echo "üîÑ git pull (2)"
            git pull origin "$BRANCH"

            echo "üü¢ Ensure NVM + Node 22"
            export NVM_DIR="$HOME/.nvm"
            if [ ! -d "$NVM_DIR" ]; then
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
            fi
            # shellcheck disable=SC1090
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm install 22
            nvm use 22
            node -v
            npm -v

            echo "üì• npm install"
            npm install --no-audit --no-fund

            echo "üèóÔ∏è npm run build"
            npm run build

            echo "‚úÖ Build complete."
